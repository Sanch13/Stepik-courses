# Прочитай число
# На вход всегда подаются только 4 строки - это графический образ зашифрованного числа, каждая
# цифра которого изображена символами ('#' и '.') одной из представленных ниже матриц:
# Например, если на вход поданы такие 4 строки:  , то на выход нужно подать одну строку с
# числом 79098654321.
# Итак, в данной задаче на выход нужно подать число, распознанное из графического образа.
# Примеры вывода смотрите ниже...
# Sample Input 1:
# ##.###
# .#####
# #..###
# ##.###
# Sample Output 1:
# 210


d = {
    0: ['##', '##', '##', '##'],
    1: ['.#', '##', '.#', '.#'],
    2: ['##', '.#', '#.', '##'],
    3: ['##', '.#', '.#', '##'],
    4: ['##', '##', '.#', '.#'],
    5: ['##', '#.', '.#', '##'],
    6: ['.#', '#.', '##', '##'],
    7: ['##', '.#', '#.', '#.'],
    8: ['##', '..', '##', '##'],
    9: ['##', '##', '.#', '#.'],
}

d_reverse = {
    ('##', '##', '##', '##'): 0,
    ('.#', '##', '.#', '.#'): 1,
    ('##', '.#', '#.', '##'): 2,
    ('##', '.#', '.#', '##'): 3,
    ('##', '##', '.#', '.#'): 4,
    ('##', '#.', '.#', '##'): 5,
    ('.#', '#.', '##', '##'): 6,
    ('##', '.#', '#.', '#.'): 7,
    ('##', '..', '##', '##'): 8,
    ('##', '##', '.#', '#.'): 9,
}

lst = [input() for i in range(4)]
out = ''
ind_l = 0
ind_r = 2
for _ in range(int(len(lst[0]) / 2)):
    num = ['', '', '', '']
    num[0] += lst[0][ind_l:ind_r]
    num[1] += lst[1][ind_l:ind_r]
    num[2] += lst[2][ind_l:ind_r]
    num[3] += lst[3][ind_l:ind_r]
    out += str(d_reverse.get(tuple(num)))
    ind_l += 2
    ind_r += 2

print(out)
