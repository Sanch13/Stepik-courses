# Пусть дан список правильных написаний имён, и список имён или других слов из записей Незнайки.
# Сопоставлять два списка сам Незнайка не в состоянии. Напишите программу, которая поможет вести
# статистику "подозрительных слов" из записей Незнайки.
# На вход подаются строки:
# в первой строке файла находится целое число N – это количество правильных имён из лекций Знайки,
# следующие N строк содержат правильные имена,
# далее идет строка, содержащая целое число M – количество «подозрительных» имен и слов из записей
# Незнайки,
# следующие M строк – это те самые имена с ошибкой, без ошибки и иные слова.
# Каждое из имен или слов – это последовательность из K заглавных букв английского алфавита
# (1 ≤ N, M, K ≤ 30).
# По результатам работы программы на выход на экран нужно вывести одну строку, состоящую из N
# чисел – для каждого правильного имени выводится количество «подозрительных слов» из записей
# Незнайки, то есть тех, которые равны по длине исходному слову, но отличаются строго на одну букву.
# Например, для при сравнении имени ZEUS и списка слов ZEVS, ZEUS, XEUS, XEROX следует вывести
# число 2, так как только 2 слова из списка отличаются на ровно 1 символ.
# На выход нужно подать одну строку, в которой через пробел записаны N целых чисел, обозначающих
# количество "подозрительных слов" для соответствующих имён из лекций Знайки.
# Sample Input:
# 3
# ZEUS
# POSEIDON
# AFINA
# 4
# ZEVS
# POSEYDON
# AVYNA
# ZERS
# Sample Output:
# 2 1 0

num = int(input())
d = {input(): 0 for word in range(num)}
num_2 = int(input())
d_2 = {input(): 0 for word in range(num_2)}

for k, _ in d.items():
    for i, _ in d_2.items():
        if len(set(k).symmetric_difference(set(i))) == 2:
            d[k] += 1

print(*sorted(d.values(), reverse=True))

