# Дороги
# В племени «Тумба-Юмба» есть N точек для охоты, некоторые из которых соединены тропами. Вождь
# племени решил провести инвентаризацию троп. Но, он не силен в математике, поэтому он просит вас
# сосчитать количество дорог.
# Требуется написать программу, помогающую сосчитать количество дорог по заданной матрице связности
# точек.
# Входные данные:
# в первой строке подаётся целое число N (0 ≤ N ≤ 100);
# в следующих N строках записано по N чисел, каждое из которых является единичкой или ноликом.
# Причем, если в позиции (i, j) квадратной матрицы стоит единичка, то i-ый и j-ый точки охоты
# соединены тропами, а если нолик, то не соединены.
# Выходные данные:
# на экран необходимо вывести число, определяющее количество троп.
# Пример - если входной поток такой:
# 5
# 0 1 0 0 0
# 1 0 1 1 0
# 0 1 0 0 0
# 0 1 0 0 0
# 0 0 0 0 0
# то правильный ответ = 3.
# Sample Input 1:
# 5
# 0 1 0 0 0
# 1 0 1 1 0
# 0 1 0 0 0
# 0 1 0 0 0
# 0 0 0 0 0
# Sample Output 1:
# 3
# Sample Input 2:
# 3
# 0 1 1
# 1 0 1
# 1 1 0
# Sample Output 2:
# 3
num = int(input())
lst = [list(map(int, input().split())) for _ in range(num)]
total = 0
for i in range(num):
    for j in range(i, num):
        if lst[i][j] == 1 and lst[i][j] == lst[j][i]:
            total += 1

print(total)
